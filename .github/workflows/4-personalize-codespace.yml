name: Step 4

on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  actions: write
  issues: write

env:
  # Keywords required in the issue comment to allow this workflow to run
  REQUIRED_ISSUE_COMMENT_KEYWORDS: "@professortocat,Codespace"
  REVIEW_FILE: ".github/steps/x-review.md"

jobs:
  required_issue_comment_keywords:
    name: Check issue comment text for required keywords
    runs-on: ubuntu-latest

    steps:
      - name: Stop early if missing the expected keywords, case insensitive
        shell: bash
        run: |
          required_keywords=(${REQUIRED_ISSUE_COMMENT_KEYWORDS//,/ })
          comment_body_lower=$(echo "$COMMENT_BODY" | tr '[:upper:]' '[:lower:]')
          for keyword in "${required_keywords[@]}"; do
            keyword_lower=$(echo "$keyword" | tr '[:upper:]' '[:lower:]')
            if [[ ! "$comment_body_lower" =~ $keyword_lower ]]; then
              exit 1
            fi
          done
        env:
          COMMENT_BODY: ${{ github.event.comment.body }}

  find_exercise:
    name: Find Exercise Issue
    uses: skills/exercise-toolkit/.github/workflows/find-exercise-issue.yml@v0.5.0

  check_step_work:
    name: Check step work
    runs-on: ubuntu-latest
    needs: [find_exercise, required_issue_comment_keywords]
    env:
      ISSUE_URL: ${{ needs.find_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get response templates
        uses: actions/checkout@v4
        with:
          repository: skills/exercise-toolkit
          path: exercise-toolkit
          ref: v0.5.0

      - name: Update comment - checking work
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file exercise-toolkit/markdown-templates/step-feedback/checking-work.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # START: Check practical exercise

      - name: Check for setup file
        id: check-setup-file
        continue-on-error: true
        uses: skills/action-keyphrase-checker@v1
        with:
          text-file: setup.sh
          keyphrase: "install sl"
          case-sensitive: false
          minimum-occurrences: 1

      - name: Build message - step results
        id: build-message-step-results
        uses: skills/action-text-variables@v2
        with:
          template-file: exercise-toolkit/markdown-templates/step-feedback/step-results-table.md
          template-vars: |
            step_number: 4
            passed: ${{ !contains(steps.*.outcome, 'failure') }}
            results_table:
              - description: "Added setup.sh file"
                passed: ${{ steps.check-setup-file.outcome == 'success' }}

      - name: Create comment - step results
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "$COMMENT_BODY" \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMENT_BODY: ${{ steps.build-message-step-results.outputs.updated-text }}

      - name: Fail job if not all checks passed
        if: contains(steps.*.outcome, 'failure')
        run: exit 1

      # END: Check practical exercise

      - name: Update comment - step finished - final review next
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file exercise-toolkit/markdown-templates/step-feedback/lesson-review.md \
            --edit-last
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  post_review_content:
    name: Post review content
    needs: [find_exercise, check_step_work]
    runs-on: ubuntu-latest
    env:
      ISSUE_URL: ${{ needs.find_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create comment - add step content
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file "$REVIEW_FILE"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  finish_exercise:
    name: Finish Exercise
    needs: [find_exercise, post_review_content]
    uses: skills/exercise-toolkit/.github/workflows/finish-exercise.yml@v0.5.0
    with:
      issue-url: ${{ needs.find_exercise.outputs.issue-url }}

  disable_workflow:
    name: Disable this workflow
    needs: [find_exercise, post_review_content]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Disable current workflow
        run: gh workflow disable "${{github.workflow}}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
